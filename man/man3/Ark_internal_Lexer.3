.TH "Ark::internal::Lexer" 3 "Wed Dec 30 2020" "ArkScript" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Ark::internal::Lexer \- The lexer, in charge of creating a list of tokens\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Lexer\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLexer\fP (unsigned debug) noexcept"
.br
.RI "\fIConstruct a new \fBLexer\fP object\&. \fP"
.ti -1c
.RI "void \fBfeed\fP (const std::string &code)"
.br
.RI "\fIGive code to tokenize and create the list of tokens\&. \fP"
.ti -1c
.RI "const std::vector< Token > & \fBtokens\fP () noexcept"
.br
.RI "\fIReturn the list of tokens\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "TokenType \fBguessType\fP (const std::string &value) noexcept"
.br
.RI "\fIHelper function to determine the type of a token\&. \fP"
.ti -1c
.RI "bool \fBisKeyword\fP (const std::string &value) noexcept"
.br
.RI "\fICheck if the value is a keyword in ArkScript\&. \fP"
.ti -1c
.RI "bool \fBisOperator\fP (const std::string &value) noexcept"
.br
.RI "\fICheck if the value is an operator in ArkScript\&. \fP"
.ti -1c
.RI "bool \fBendOfControlChar\fP (const std::string &sequence, char next) noexcept"
.br
.RI "\fICheck if a control character / sequence is complete or not\&. \fP"
.ti -1c
.RI "void \fBthrowTokenizingError\fP (const std::string &message, const std::string &match, std::size_t line, std::size_t col, const std::string &context)"
.br
.RI "\fITo throw nice lexer errors\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The lexer, in charge of creating a list of tokens\&. 
.PP
Definition at line 95 of file Lexer\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Ark::internal::Lexer::Lexer (unsigned debug)\fC [explicit]\fP, \fC [noexcept]\fP"

.PP
Construct a new \fBLexer\fP object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdebug\fP the debug level 
.RE
.PP

.PP
Definition at line 10 of file Lexer\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void Ark::internal::Lexer::feed (const std::string & code)"

.PP
Give code to tokenize and create the list of tokens\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcode\fP the ArkScript code 
.RE
.PP

.PP
\fBTodo\fP
.RS 4

.RE
.PP

.PP
Definition at line 14 of file Lexer\&.cpp\&.
.SS "const std::vector< Token > & Ark::internal::Lexer::tokens ()\fC [noexcept]\fP"

.PP
Return the list of tokens\&. 
.PP
\fBReturns:\fP
.RS 4
const std::vector<Token>& 
.RE
.PP

.PP
Definition at line 234 of file Lexer\&.cpp\&.
.SS "TokenType Ark::internal::Lexer::guessType (const std::string & value)\fC [inline]\fP, \fC [private]\fP, \fC [noexcept]\fP"

.PP
Helper function to determine the type of a token\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
TokenType 
.RE
.PP

.SS "bool Ark::internal::Lexer::isKeyword (const std::string & value)\fC [inline]\fP, \fC [private]\fP, \fC [noexcept]\fP"

.PP
Check if the value is a keyword in ArkScript\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
true 
.PP
false 
.RE
.PP

.SS "bool Ark::internal::Lexer::isOperator (const std::string & value)\fC [inline]\fP, \fC [private]\fP, \fC [noexcept]\fP"

.PP
Check if the value is an operator in ArkScript\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
true 
.PP
false 
.RE
.PP

.SS "bool Ark::internal::Lexer::endOfControlChar (const std::string & sequence, char next)\fC [inline]\fP, \fC [private]\fP, \fC [noexcept]\fP"

.PP
Check if a control character / sequence is complete or not\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsequence\fP the sequence without the leading \\ 
.br
\fInext\fP the next character to come, maybe, in the sequence 
.RE
.PP
\fBReturns:\fP
.RS 4
true 
.PP
false 
.RE
.PP

.SS "void Ark::internal::Lexer::throwTokenizingError (const std::string & message, const std::string & match, std::size_t line, std::size_t col, const std::string & context)\fC [inline]\fP, \fC [private]\fP"

.PP
To throw nice lexer errors\&. 
.PP
\fBParameters:\fP
.RS 4
\fImessage\fP 
.br
\fImatch\fP 
.br
\fIline\fP 
.br
\fIcol\fP 
.br
\fIcontext\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for ArkScript from the source code\&.
