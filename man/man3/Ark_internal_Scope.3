.TH "Ark::internal::Scope" 3 "Wed Dec 30 2020" "ArkScript" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Ark::internal::Scope \- A class to handle the \fBVM\fP scope more efficiently\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Scope\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBScope\fP () noexcept"
.br
.RI "\fIConstruct a new \fBScope\fP object\&. \fP"
.ti -1c
.RI "void \fBpush_back\fP (uint16_t id, Value &&val) noexcept"
.br
.RI "\fIPut a value in the scope\&. \fP"
.ti -1c
.RI "void \fBpush_back\fP (uint16_t id, const Value &val) noexcept"
.br
.RI "\fIPut a value in the scope\&. \fP"
.ti -1c
.RI "bool \fBhas\fP (uint16_t id) noexcept"
.br
.RI "\fICheck if the scope has a specific symbol in memory\&. \fP"
.ti -1c
.RI "Value * \fBoperator[]\fP (uint16_t id) noexcept"
.br
.RI "\fIGet a value from its symbol id\&. \fP"
.ti -1c
.RI "uint16_t \fBidFromValue\fP (Value &&val) noexcept"
.br
.RI "\fIGet the id of a variable based on its value ; used for debug only\&. \fP"
.ti -1c
.RI "const std::size_t \fBsize\fP () const noexcept"
.br
.RI "\fIReturn the size of the scope\&. \fP"
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBArk::VM\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
A class to handle the \fBVM\fP scope more efficiently\&. 
.PP
Definition at line 27 of file Scope\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void Ark::internal::Scope::push_back (uint16_t id, Value && val)\fC [noexcept]\fP"

.PP
Put a value in the scope\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP The symbol id of the variable 
.br
\fIval\fP The value linked to the symbol 
.RE
.PP

.PP
Definition at line 20 of file Scope\&.cpp\&.
.SS "void Ark::internal::Scope::push_back (uint16_t id, const Value & val)\fC [noexcept]\fP"

.PP
Put a value in the scope\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP The symbol id of the variable 
.br
\fIval\fP The value linked to the symbol 
.RE
.PP

.PP
Definition at line 49 of file Scope\&.cpp\&.
.SS "bool Ark::internal::Scope::has (uint16_t id)\fC [noexcept]\fP"

.PP
Check if the scope has a specific symbol in memory\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP The id of the symbol 
.RE
.PP
\fBReturns:\fP
.RS 4
true On success 
.PP
false Otherwise 
.RE
.PP

.PP
Definition at line 77 of file Scope\&.cpp\&.
.SS "Value * Ark::internal::Scope::operator[] (uint16_t id)\fC [noexcept]\fP"

.PP
Get a value from its symbol id\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
Value* Returns nullptr if the value can not be found 
.RE
.PP

.PP
Definition at line 82 of file Scope\&.cpp\&.
.SS "uint16_t Ark::internal::Scope::idFromValue (Value && val)\fC [noexcept]\fP"

.PP
Get the id of a variable based on its value ; used for debug only\&. 
.PP
\fBParameters:\fP
.RS 4
\fIval\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
uint16_t 
.RE
.PP

.PP
Definition at line 113 of file Scope\&.cpp\&.
.SS "const std::size_t Ark::internal::Scope::size () const\fC [noexcept]\fP"

.PP
Return the size of the scope\&. 
.PP
\fBReturns:\fP
.RS 4
const std::size_t 
.RE
.PP

.PP
Definition at line 123 of file Scope\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ArkScript from the source code\&.
